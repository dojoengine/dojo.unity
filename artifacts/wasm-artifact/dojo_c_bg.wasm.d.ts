/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_signingkey_free: (a: number, b: number) => void;
export const __wbg_verifyingkey_free: (a: number, b: number) => void;
export const __wbg_typeddata_free: (a: number, b: number) => void;
export const __wbg_bytearray_free: (a: number, b: number) => void;
export const signingkey_new: () => number;
export const signingkey_fromSecretScalar: (a: number, b: number) => [number, number, number];
export const signingkey_secretScalar: (a: number) => [number, number, number, number];
export const signingkey_sign: (a: number, b: number, c: number) => [number, number, number];
export const signingkey_verifyingKey: (a: number) => [number, number, number];
export const verifyingkey_new: (a: number, b: number) => [number, number, number];
export const verifyingkey_scalar: (a: number) => [number, number, number, number];
export const verifyingkey_verify: (a: number, b: number, c: number, d: any) => [number, number, number];
export const typeddata_new: (a: number, b: number) => [number, number, number];
export const typeddata_encode: (a: number, b: number, c: number) => [number, number, number, number];
export const provider_new: (a: number, b: number) => [number, number, number];
export const provider_call: (a: number, b: any, c: any) => any;
export const provider_waitForTransaction: (a: number, b: number, c: number) => any;
export const account_new: (a: number, b: number, c: number, d: number, e: number) => any;
export const account_address: (a: number) => [number, number, number, number];
export const account_chainId: (a: number) => [number, number, number, number];
export const account_setBlockId: (a: number, b: number, c: number) => [number, number];
export const account_executeRaw: (a: number, b: number, c: number) => any;
export const account_deployBurner: (a: number, b: number, c: number) => any;
export const account_nonce: (a: number) => any;
export const account_provider: (a: number) => number;
export const getContractAddress: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number, number, number];
export const getSelectorFromTag: (a: number, b: number) => [number, number];
export const bytearray_new: (a: number, b: number) => [number, number, number];
export const bytearray_toRaw: (a: number) => [number, number, number, number];
export const bytearray_fromRaw: (a: number, b: number) => [number, number, number];
export const bytearray_toString: (a: number) => [number, number, number, number];
export const poseidonHash: (a: number, b: number) => [number, number, number, number];
export const getSelectorFromName: (a: number, b: number) => [number, number, number, number];
export const starknetKeccak: (a: any) => [number, number, number, number];
export const cairoShortStringToFelt: (a: number, b: number) => [number, number, number, number];
export const parseCairoShortString: (a: number, b: number) => [number, number, number, number];
export const toriiclient_new: (a: any) => any;
export const toriiclient_getControllers: (a: number, b: number, c: number) => any;
export const toriiclient_getTokens: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => any;
export const toriiclient_onTokenUpdated: (a: number, b: number, c: number, d: number, e: number, f: any) => [number, number, number];
export const toriiclient_getTokenBalances: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => any;
export const toriiclient_getEntities: (a: number, b: any) => any;
export const toriiclient_getAllEntities: (a: number, b: number, c: number, d: number) => any;
export const toriiclient_getEventMessages: (a: number, b: any) => any;
export const toriiclient_onEntityUpdated: (a: number, b: number, c: any) => [number, number, number];
export const toriiclient_updateEntitySubscription: (a: number, b: number, c: number) => any;
export const toriiclient_onEventMessageUpdated: (a: number, b: number, c: any) => [number, number, number];
export const toriiclient_updateEventMessageSubscription: (a: number, b: number, c: number) => any;
export const toriiclient_onStarknetEvent: (a: number, b: number, c: number, d: any) => [number, number, number];
export const toriiclient_onIndexerUpdated: (a: number, b: number, c: number, d: any) => [number, number, number];
export const toriiclient_onTokenBalanceUpdated: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: any) => [number, number, number];
export const toriiclient_updateTokenBalanceSubscription: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => any;
export const toriiclient_publishMessage: (a: number, b: number, c: number, d: number, e: number) => any;
export const subscription_cancel: (a: number) => void;
export const verifyingkey_fromSigningKey: (a: number) => [number, number, number];
export const __wbg_toriiclient_free: (a: number, b: number) => void;
export const __wbg_provider_free: (a: number, b: number) => void;
export const __wbg_account_free: (a: number, b: number) => void;
export const __wbg_controlleraccount_free: (a: number, b: number) => void;
export const __wbg_subscription_free: (a: number, b: number) => void;
export const __wbg_intounderlyingbytesource_free: (a: number, b: number) => void;
export const intounderlyingbytesource_type: (a: number) => number;
export const intounderlyingbytesource_autoAllocateChunkSize: (a: number) => number;
export const intounderlyingbytesource_start: (a: number, b: any) => void;
export const intounderlyingbytesource_pull: (a: number, b: any) => any;
export const intounderlyingbytesource_cancel: (a: number) => void;
export const __wbg_intounderlyingsource_free: (a: number, b: number) => void;
export const intounderlyingsource_pull: (a: number, b: any) => any;
export const intounderlyingsource_cancel: (a: number) => void;
export const __wbg_intounderlyingsink_free: (a: number, b: number) => void;
export const intounderlyingsink_write: (a: number, b: any) => any;
export const intounderlyingsink_close: (a: number) => any;
export const intounderlyingsink_abort: (a: number, b: any) => any;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_export_5: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __externref_drop_slice: (a: number, b: number) => void;
export const _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h117df3dc8165caf5: (a: number, b: number) => void;
export const closure1134_externref_shim: (a: number, b: number, c: any) => void;
export const closure1159_externref_shim: (a: number, b: number, c: any) => void;
export const _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h9feb41257b1ba6f0: (a: number, b: number) => void;
export const closure2500_externref_shim: (a: number, b: number, c: any) => void;
export const closure2676_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
