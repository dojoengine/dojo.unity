
// <auto-generated>
//  This code was generated by the following tool on 2024-11-04 18:42:12 GMT-05:00:
//      https://github.com/bottlenoselabs/c2cs (v0.0.0.0)
//
//  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ReSharper disable All

#region Template
#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS8981
using bottlenoselabs.C2CS.Runtime;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.Linq;
#endregion

namespace dojo_bindings
{

    public static unsafe partial class dojo
    {
        private const string LibraryName = "libdojo_c";

        #region API

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_address", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement account_address(Account* account);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_chain_id", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement account_chain_id(Account* account);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_deploy_burner", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultAccount account_deploy_burner(Provider* provider, Account* master_account, FieldElement signing_key);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_execute_raw", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultFieldElement account_execute_raw(Account* account, Call* calldata, UIntPtr calldata_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void account_free(Account* account);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_new", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultAccount account_new(Provider* rpc, FieldElement private_key, CString address);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_nonce", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultFieldElement account_nonce(Account* account);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "account_set_block_id", CallingConvention = CallingConvention.Cdecl)]
        public static extern void account_set_block_id(Account* account, BlockId block_id);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "bytearray_deserialize", CallingConvention = CallingConvention.Cdecl)]
        public static extern Resultc_char bytearray_deserialize(FieldElement* felts, UIntPtr felts_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "bytearray_serialize", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultCArrayFieldElement bytearray_serialize(CString str);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "cairo_short_string_to_felt", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultFieldElement cairo_short_string_to_felt(CString str);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "carray_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void carray_free(void* data, UIntPtr data_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_entities", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultCArrayEntity client_entities(ToriiClient* client, Query* query);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_event_messages", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultCArrayEntity client_event_messages(ToriiClient* client, Query* query, CBool historical);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void client_free(ToriiClient* t);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_metadata", CallingConvention = CallingConvention.Cdecl)]
        public static extern WorldMetadata client_metadata(ToriiClient* client);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_new", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultToriiClient client_new(CString torii_url, CString rpc_url, CString libp2p_relay_url, FieldElement world);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_on_entity_state_update", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultSubscription client_on_entity_state_update(ToriiClient* client, EntityKeysClause* clauses, UIntPtr clauses_len, FnPtr_FieldElement_CArrayStruct_Void callback);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_on_event_message_update", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultSubscription client_on_event_message_update(ToriiClient* client, EntityKeysClause* clauses, UIntPtr clauses_len, CBool historical, FnPtr_FieldElement_CArrayStruct_Void callback);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_on_starknet_event", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultSubscription client_on_starknet_event(ToriiClient* client, EntityKeysClause* clauses, UIntPtr clauses_len, FnPtr_Event_Void callback);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_publish_message", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultCArrayu8 client_publish_message(ToriiClient* client, CString message, FieldElement* signature_felts, UIntPtr signature_felts_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_set_logger", CallingConvention = CallingConvention.Cdecl)]
        public static extern void client_set_logger(ToriiClient* client, FnPtr_CString_Void logger);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_update_entity_subscription", CallingConvention = CallingConvention.Cdecl)]
        public static extern Resultbool client_update_entity_subscription(ToriiClient* client, Subscription* subscription, EntityKeysClause* clauses, UIntPtr clauses_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "client_update_event_message_subscription", CallingConvention = CallingConvention.Cdecl)]
        public static extern Resultbool client_update_event_message_subscription(ToriiClient* client, Subscription* subscription, EntityKeysClause* clauses, UIntPtr clauses_len, CBool historical);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "entity_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void entity_free(Entity* entity);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "error_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void error_free(Error* error);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "get_selector_from_name", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultFieldElement get_selector_from_name(CString name);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "get_selector_from_tag", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement get_selector_from_tag(CString tag);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "hash_get_contract_address", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement hash_get_contract_address(FieldElement class_hash, FieldElement salt, FieldElement* constructor_calldata, UIntPtr constructor_calldata_len, FieldElement deployer_address);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "model_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void model_free(Struct* model);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "on_indexer_update", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultSubscription on_indexer_update(ToriiClient* client, FieldElement* contract_address, FnPtr_IndexerUpdate_Void callback);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "parse_cairo_short_string", CallingConvention = CallingConvention.Cdecl)]
        public static extern Resultc_char parse_cairo_short_string(FieldElement felt);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "poseidon_hash", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement poseidon_hash(FieldElement* felts, UIntPtr felts_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "provider_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void provider_free(Provider* rpc);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "provider_new", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultProvider provider_new(CString rpc_url);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "signing_key_new", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement signing_key_new();

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "signing_key_sign", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultSignature signing_key_sign(FieldElement private_key, FieldElement hash);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "starknet_call", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultCArrayFieldElement starknet_call(Provider* provider, Call call, BlockId block_id);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "starknet_keccak", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement starknet_keccak(byte* bytes, UIntPtr bytes_len);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "string_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void string_free(CString @string);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "subscription_cancel", CallingConvention = CallingConvention.Cdecl)]
        public static extern void subscription_cancel(Subscription* subscription);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "ty_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void ty_free(Ty* ty);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "typed_data_encode", CallingConvention = CallingConvention.Cdecl)]
        public static extern ResultFieldElement typed_data_encode(CString typed_data, FieldElement address);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "verifying_key_new", CallingConvention = CallingConvention.Cdecl)]
        public static extern FieldElement verifying_key_new(FieldElement signing_key);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "verifying_key_verify", CallingConvention = CallingConvention.Cdecl)]
        public static extern Resultbool verifying_key_verify(FieldElement verifying_key, FieldElement hash, Signature signature);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "wait_for_transaction", CallingConvention = CallingConvention.Cdecl)]
        public static extern Resultbool wait_for_transaction(Provider* rpc, FieldElement txn_hash);

        [CNode(Kind = "Function")]
        [DllImport(LibraryName, EntryPoint = "world_metadata_free", CallingConvention = CallingConvention.Cdecl)]
        public static extern void world_metadata_free(WorldMetadata* metadata);

        #endregion

        #region Types

        [CNode(Kind = "FunctionPointer")]
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_CString_Void
        {
            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public unsafe delegate void @delegate(CString param);

            public IntPtr Pointer;

            public FnPtr_CString_Void(@delegate d)
            {
                Pointer = Marshal.GetFunctionPointerForDelegate(d);
            }
        }

        [CNode(Kind = "FunctionPointer")]
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_Event_Void
        {
            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public unsafe delegate void @delegate(Event param);

            public IntPtr Pointer;

            public FnPtr_Event_Void(@delegate d)
            {
                Pointer = Marshal.GetFunctionPointerForDelegate(d);
            }
        }

        [CNode(Kind = "FunctionPointer")]
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_FieldElement_CArrayStruct_Void
        {
            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public unsafe delegate void @delegate(FieldElement param, CArrayStruct param2);

            public IntPtr Pointer;

            public FnPtr_FieldElement_CArrayStruct_Void(@delegate d)
            {
                Pointer = Marshal.GetFunctionPointerForDelegate(d);
            }
        }

        [CNode(Kind = "FunctionPointer")]
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_IndexerUpdate_Void
        {
            [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
            public unsafe delegate void @delegate(IndexerUpdate param);

            public IntPtr Pointer;

            public FnPtr_IndexerUpdate_Void(@delegate d)
            {
                Pointer = Marshal.GetFunctionPointerForDelegate(d);
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct BlockId
        {
            [FieldOffset(0)] // size = 4
            public BlockId_Tag tag;

            [FieldOffset(8)] // size = 32
            public FieldElement hash;

            [FieldOffset(8)] // size = 8
            public ulong number;

            [FieldOffset(8)] // size = 4
            public BlockTag block_tag;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct BlockId_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 32
            public FieldElement hash;

            [FieldOffset(0)] // size = 8
            public ulong number;

            [FieldOffset(0)] // size = 4
            public BlockTag block_tag;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct BlockId_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 32
            public FieldElement hash;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct BlockId_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public ulong number;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct BlockId_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 4
            public BlockTag block_tag;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayCHashItemFieldElementModelMetadata
        {
            [FieldOffset(0)] // size = 8
            public CHashItemFieldElementModelMetadata* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayCOptionFieldElement
        {
            [FieldOffset(0)] // size = 8
            public COptionFieldElement* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayClause
        {
            [FieldOffset(0)] // size = 8
            public Clause* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayEntity
        {
            [FieldOffset(0)] // size = 8
            public Entity* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayEnumOption
        {
            [FieldOffset(0)] // size = 8
            public EnumOption* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayFieldElement
        {
            [FieldOffset(0)] // size = 8
            public FieldElement* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayMember
        {
            [FieldOffset(0)] // size = 8
            public Member* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayStruct
        {
            [FieldOffset(0)] // size = 8
            public Struct* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayTy
        {
            [FieldOffset(0)] // size = 8
            public Ty* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayc_char
        {
            [FieldOffset(0)] // size = 8
            public CString* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArrayu8
        {
            [FieldOffset(0)] // size = 8
            public byte* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 184, Pack = 8)]
        public struct CHashItemFieldElementModelMetadata
        {
            [FieldOffset(0)] // size = 32
            public FieldElement key;

            [FieldOffset(32)] // size = 152
            public ModelMetadata value;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 88, Pack = 8)]
        public struct COptionClause
        {
            [FieldOffset(0)] // size = 4
            public COptionClause_Tag tag;

            [FieldOffset(8)] // size = 80
            public Clause some;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 80, Pack = 8)]
        public struct COptionClause_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 80
            public Clause some;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 80, Pack = 8)]
        public struct COptionClause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 80
            public Clause some;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 36, Pack = 4)]
        public struct COptionFieldElement
        {
            [FieldOffset(0)] // size = 4
            public COptionFieldElement_Tag tag;

            [FieldOffset(4)] // size = 32
            public FieldElement some;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct COptionFieldElement_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 32
            public FieldElement some;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct COptionFieldElement_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 32
            public FieldElement some;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
        public struct Call
        {
            [FieldOffset(0)] // size = 32
            public FieldElement to;

            [FieldOffset(32)] // size = 8
            public CString selector_;

            public string selector
            {
                get
                {
                    return CString.ToString(selector_);
                }
                set
                {
                    selector_ = CString.FromString(value);
                }
            }

            [FieldOffset(40)] // size = 16
            public CArrayFieldElement _calldata;

            public Span<FieldElement> calldata
            {
                get
                {
                    fixed (Call* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_calldata.data, (int)@this->_calldata.data_len);
                        return span;
                    }
                }

                set
                {

                    _calldata = new CArrayFieldElement();
                    _calldata.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _calldata.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 80, Pack = 8)]
        public struct Clause
        {
            [FieldOffset(0)] // size = 4
            public Clause_Tag tag;

            [FieldOffset(8)] // size = 40
            public KeysClause keys;

            [FieldOffset(8)] // size = 72
            public MemberClause c_member;

            [FieldOffset(8)] // size = 24
            public CompositeClause composite;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 72, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 40
            public KeysClause keys;

            [FieldOffset(0)] // size = 72
            public MemberClause c_member;

            [FieldOffset(0)] // size = 24
            public CompositeClause composite;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 40
            public KeysClause keys;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 72, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 72
            public MemberClause c_member;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 24
            public CompositeClause composite;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct CompositeClause
        {
            [FieldOffset(0)] // size = 4
            public LogicalOperator operator_;

            [FieldOffset(8)] // size = 16
            public CArrayClause _clauses;

            public Span<Clause> clauses
            {
                get
                {
                    fixed (CompositeClause* @this = &this)
                    {
                        var span = new Span<Clause>(@this->_clauses.data, (int)@this->_clauses.data_len);
                        return span;
                    }
                }

                set
                {

                    _clauses = new CArrayClause();
                    _clauses.data_len = (UIntPtr)value.Length;
                    fixed (Clause* ptr = value)
                    {
                        _clauses.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
        public struct Entity
        {
            [FieldOffset(0)] // size = 32
            public FieldElement hashed_keys;

            [FieldOffset(32)] // size = 16
            public CArrayStruct _models;

            public Span<Struct> models
            {
                get
                {
                    fixed (Entity* @this = &this)
                    {
                        var span = new Span<Struct>(@this->_models.data, (int)@this->_models.data_len);
                        return span;
                    }
                }

                set
                {

                    _models = new CArrayStruct();
                    _models.data_len = (UIntPtr)value.Length;
                    fixed (Struct* ptr = value)
                    {
                        _models.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
        public struct EntityKeysClause
        {
            [FieldOffset(0)] // size = 4
            public EntityKeysClause_Tag tag;

            [FieldOffset(8)] // size = 16
            public CArrayFieldElement _hashed_keys;

            public Span<FieldElement> hashed_keys
            {
                get
                {
                    fixed (EntityKeysClause* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_hashed_keys.data, (int)@this->_hashed_keys.data_len);
                        return span;
                    }
                }

                set
                {

                    _hashed_keys = new CArrayFieldElement();
                    _hashed_keys.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _hashed_keys.data = ptr;
                    }
                }
            }

            [FieldOffset(8)] // size = 40
            public KeysClause entity_keys;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct EntityKeysClause_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 16
            public CArrayFieldElement _hashed_keys;

            public Span<FieldElement> hashed_keys
            {
                get
                {
                    fixed (EntityKeysClause_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_hashed_keys.data, (int)@this->_hashed_keys.data_len);
                        return span;
                    }
                }

                set
                {

                    _hashed_keys = new CArrayFieldElement();
                    _hashed_keys.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _hashed_keys.data = ptr;
                    }
                }
            }

            [FieldOffset(0)] // size = 40
            public KeysClause entity_keys;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct EntityKeysClause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 16
            public CArrayFieldElement _hashed_keys;

            public Span<FieldElement> hashed_keys
            {
                get
                {
                    fixed (EntityKeysClause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_hashed_keys.data, (int)@this->_hashed_keys.data_len);
                        return span;
                    }
                }

                set
                {

                    _hashed_keys = new CArrayFieldElement();
                    _hashed_keys.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _hashed_keys.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct EntityKeysClause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 40
            public KeysClause entity_keys;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Enum
        {
            [FieldOffset(0)] // size = 8
            public CString name_;

            public string name
            {
                get
                {
                    return CString.ToString(name_);
                }
                set
                {
                    name_ = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 1
            public byte option;

            [FieldOffset(16)] // size = 16
            public CArrayEnumOption _options;

            public Span<EnumOption> options
            {
                get
                {
                    fixed (Enum* @this = &this)
                    {
                        var span = new Span<EnumOption>(@this->_options.data, (int)@this->_options.data_len);
                        return span;
                    }
                }

                set
                {

                    _options = new CArrayEnumOption();
                    _options.data_len = (UIntPtr)value.Length;
                    fixed (EnumOption* ptr = value)
                    {
                        _options.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct EnumOption
        {
            [FieldOffset(0)] // size = 8
            public CString name_;

            public string name
            {
                get
                {
                    return CString.ToString(name_);
                }
                set
                {
                    name_ = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public Ty* _ty;

            public Ty ty
            {
                get
                {
                    return *_ty;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Error
        {
            [FieldOffset(0)] // size = 8
            public CString message_;

            public string message
            {
                get
                {
                    return CString.ToString(message_);
                }
                set
                {
                    message_ = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
        public struct Event
        {
            [FieldOffset(0)] // size = 16
            public CArrayFieldElement _keys;

            public Span<FieldElement> keys
            {
                get
                {
                    fixed (Event* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_keys.data, (int)@this->_keys.data_len);
                        return span;
                    }
                }

                set
                {

                    _keys = new CArrayFieldElement();
                    _keys.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _keys.data = ptr;
                    }
                }
            }

            [FieldOffset(16)] // size = 16
            public CArrayFieldElement _data;

            public Span<FieldElement> data
            {
                get
                {
                    fixed (Event* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_data.data, (int)@this->_data.data_len);
                        return span;
                    }
                }

                set
                {

                    _data = new CArrayFieldElement();
                    _data.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _data.data = ptr;
                    }
                }
            }

            [FieldOffset(32)] // size = 32
            public FieldElement transaction_hash;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct FieldElement
        {
            [FieldOffset(0)] // size = 32
            public fixed byte _data[32]; // uint8_t[32]

            public Span<byte> data
            {
                get
                {
                    fixed (FieldElement* @this = &this)
                    {
                        var pointer = &@this->_data[0];
                        var span = new Span<byte>(pointer, 32);
                        return span;
                    }
                }

                set
                {
                    fixed (FieldElement* @this = &this)
                    {
                        var pointer = &@this->_data[0];
                        var span = new Span<byte>(pointer, 32);
                        value.CopyTo(span);
                    }
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
        public struct IndexerUpdate
        {
            [FieldOffset(0)] // size = 8
            public long head;

            [FieldOffset(8)] // size = 8
            public long tps;

            [FieldOffset(16)] // size = 8
            public long last_block_timestamp;

            [FieldOffset(24)] // size = 32
            public FieldElement contract_address;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct KeysClause
        {
            [FieldOffset(0)] // size = 16
            public CArrayCOptionFieldElement _keys;

            public Span<COptionFieldElement> keys
            {
                get
                {
                    fixed (KeysClause* @this = &this)
                    {
                        var span = new Span<COptionFieldElement>(@this->_keys.data, (int)@this->_keys.data_len);
                        return span;
                    }
                }

                set
                {

                    _keys = new CArrayCOptionFieldElement();
                    _keys.data_len = (UIntPtr)value.Length;
                    fixed (COptionFieldElement* ptr = value)
                    {
                        _keys.data = ptr;
                    }
                }
            }

            [FieldOffset(16)] // size = 4
            public PatternMatching pattern_matching;

            [FieldOffset(24)] // size = 16
            public CArrayc_char _models;

            public Span<string> models
            {
                get
                {
                    fixed (KeysClause* @this = &this)
                    {
                        var span = new Span<CString>(@this->_models.data, (int)@this->_models.data_len);
                        return span.ToArray().Select(str => CString.ToString(str)).ToArray();
                    }
                }

                set
                {
                    var strings = value.ToArray().Select(str => CString.FromString(str)).ToArray();
                    _models = new CArrayc_char();
                    _models.data_len = (UIntPtr)value.Length;
                    fixed (CString* ptr = strings)
                    {
                        _models.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Member
        {
            [FieldOffset(0)] // size = 8
            public CString name_;

            public string name
            {
                get
                {
                    return CString.ToString(name_);
                }
                set
                {
                    name_ = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public Ty* _ty;

            public Ty ty
            {
                get
                {
                    return *_ty;
                }
            }

            [FieldOffset(16)] // size = 1
            public CBool key;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 72, Pack = 8)]
        public struct MemberClause
        {
            [FieldOffset(0)] // size = 8
            public CString model_;

            public string model
            {
                get
                {
                    return CString.ToString(model_);
                }
                set
                {
                    model_ = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public CString member_;

            public string member
            {
                get
                {
                    return CString.ToString(member_);
                }
                set
                {
                    member_ = CString.FromString(value);
                }
            }

            [FieldOffset(16)] // size = 4
            public ComparisonOperator operator_;

            [FieldOffset(24)] // size = 48
            public MemberValue value;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
        public struct MemberValue
        {
            [FieldOffset(0)] // size = 4
            public MemberValue_Tag tag;

            [FieldOffset(8)] // size = 40
            public Primitive primitive;

            [FieldOffset(8)] // size = 8
            public CString @string_;

            public string @string
            {
                get
                {
                    return CString.ToString(@string_);
                }
                set
                {
                    @string_ = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct MemberValue_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 40
            public Primitive primitive;

            [FieldOffset(0)] // size = 8
            public CString @string_;

            public string @string
            {
                get
                {
                    return CString.ToString(@string_);
                }
                set
                {
                    @string_ = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct MemberValue_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 40
            public Primitive primitive;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct MemberValue_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public CString @string_;

            public string @string
            {
                get
                {
                    return CString.ToString(@string_);
                }
                set
                {
                    @string_ = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 152, Pack = 8)]
        public struct ModelMetadata
        {
            [FieldOffset(0)] // size = 48
            public Ty schema;

            [FieldOffset(48)] // size = 8
            public CString namespace__;

            public string namespace_
            {
                get
                {
                    return CString.ToString(namespace__);
                }
                set
                {
                    namespace__ = CString.FromString(value);
                }
            }

            [FieldOffset(56)] // size = 8
            public CString name_;

            public string name
            {
                get
                {
                    return CString.ToString(name_);
                }
                set
                {
                    name_ = CString.FromString(value);
                }
            }

            [FieldOffset(64)] // size = 4
            public uint packed_size;

            [FieldOffset(68)] // size = 4
            public uint unpacked_size;

            [FieldOffset(72)] // size = 32
            public FieldElement class_hash;

            [FieldOffset(104)] // size = 32
            public FieldElement contract_address;

            [FieldOffset(136)] // size = 16
            public CArrayFieldElement _layout;

            public Span<FieldElement> layout
            {
                get
                {
                    fixed (ModelMetadata* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_layout.data, (int)@this->_layout.data_len);
                        return span;
                    }
                }

                set
                {

                    _layout = new CArrayFieldElement();
                    _layout.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _layout.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Primitive
        {
            [FieldOffset(0)] // size = 4
            public Primitive_Tag tag;

            [FieldOffset(8)] // size = 1
            public sbyte i8;

            [FieldOffset(8)] // size = 2
            public short i16;

            [FieldOffset(8)] // size = 4
            public int i32;

            [FieldOffset(8)] // size = 8
            public long i64;

            [FieldOffset(8)] // size = 16
            public fixed byte _i128[16]; // uint8_t[16]

            public Span<byte> i128
            {
                get
                {
                    fixed (Primitive* @this = &this)
                    {
                        var pointer = &@this->_i128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }

                set
                {
                    fixed (Primitive* @this = &this)
                    {
                        var pointer = &@this->_i128[0];
                        var span = new Span<byte>(pointer, 16);
                        value.CopyTo(span);
                    }
                }
            }

            [FieldOffset(8)] // size = 1
            public byte u8;

            [FieldOffset(8)] // size = 2
            public ushort u16;

            [FieldOffset(8)] // size = 4
            public uint u32;

            [FieldOffset(8)] // size = 8
            public ulong u64;

            [FieldOffset(8)] // size = 16
            public fixed byte _u128[16]; // uint8_t[16]

            public Span<byte> u128
            {
                get
                {
                    fixed (Primitive* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }

                set
                {
                    fixed (Primitive* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        value.CopyTo(span);
                    }
                }
            }

            [FieldOffset(8)] // size = 32
            public fixed byte _u256[32]; // uint64_t[4]

            public Span<ulong> u256
            {
                get
                {
                    fixed (Primitive* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        return span;
                    }
                }

                set
                {
                    fixed (Primitive* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        value.CopyTo(span);
                    }
                }
            }

            [FieldOffset(8)] // size = 4
            public uint u_size;

            [FieldOffset(8)] // size = 1
            public CBool bool_;

            [FieldOffset(8)] // size = 32
            public FieldElement felt252;

            [FieldOffset(8)] // size = 32
            public FieldElement class_hash;

            [FieldOffset(8)] // size = 32
            public FieldElement contract_address;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Primitive_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 1
            public sbyte i8;

            [FieldOffset(0)] // size = 2
            public short i16;

            [FieldOffset(0)] // size = 4
            public int i32;

            [FieldOffset(0)] // size = 8
            public long i64;

            [FieldOffset(0)] // size = 16
            public fixed byte _i128[16]; // uint8_t[16]

            public Span<byte> i128
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var pointer = &@this->_i128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }

                set
                {
                    fixed (Primitive_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var pointer = &@this->_i128[0];
                        var span = new Span<byte>(pointer, 16);
                        value.CopyTo(span);
                    }
                }
            }

            [FieldOffset(0)] // size = 1
            public byte u8;

            [FieldOffset(0)] // size = 2
            public ushort u16;

            [FieldOffset(0)] // size = 4
            public uint u32;

            [FieldOffset(0)] // size = 8
            public ulong u64;

            [FieldOffset(0)] // size = 16
            public fixed byte _u128[16]; // uint8_t[16]

            public Span<byte> u128
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }

                set
                {
                    fixed (Primitive_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        value.CopyTo(span);
                    }
                }
            }

            [FieldOffset(0)] // size = 32
            public fixed byte _u256[32]; // uint64_t[4]

            public Span<ulong> u256
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        return span;
                    }
                }

                set
                {
                    fixed (Primitive_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        value.CopyTo(span);
                    }
                }
            }

            [FieldOffset(0)] // size = 4
            public uint u_size;

            [FieldOffset(0)] // size = 1
            public CBool bool_;

            [FieldOffset(0)] // size = 32
            public FieldElement felt252;

            [FieldOffset(0)] // size = 32
            public FieldElement class_hash;

            [FieldOffset(0)] // size = 32
            public FieldElement contract_address;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 1
            public sbyte i8;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 2, Pack = 2)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 2
            public short i16;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD10
        {
            [FieldOffset(0)] // size = 32
            public fixed byte _u256[32]; // uint64_t[4]

            public Span<ulong> u256
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD10* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        return span;
                    }
                }

                set
                {
                    fixed (Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD10* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        value.CopyTo(span);
                    }
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD11
        {
            [FieldOffset(0)] // size = 4
            public uint u_size;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD12
        {
            [FieldOffset(0)] // size = 1
            public CBool bool_;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD13
        {
            [FieldOffset(0)] // size = 32
            public FieldElement felt252;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD14
        {
            [FieldOffset(0)] // size = 32
            public FieldElement class_hash;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD15
        {
            [FieldOffset(0)] // size = 32
            public FieldElement contract_address;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 4
            public int i32;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD3
        {
            [FieldOffset(0)] // size = 8
            public long i64;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4
        {
            [FieldOffset(0)] // size = 16
            public fixed byte _i128[16]; // uint8_t[16]

            public Span<byte> i128
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4* @this = &this)
                    {
                        var pointer = &@this->_i128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }

                set
                {
                    fixed (Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4* @this = &this)
                    {
                        var pointer = &@this->_i128[0];
                        var span = new Span<byte>(pointer, 16);
                        value.CopyTo(span);
                    }
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD5
        {
            [FieldOffset(0)] // size = 1
            public byte u8;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 2, Pack = 2)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD6
        {
            [FieldOffset(0)] // size = 2
            public ushort u16;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD7
        {
            [FieldOffset(0)] // size = 4
            public uint u32;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD8
        {
            [FieldOffset(0)] // size = 8
            public ulong u64;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD9
        {
            [FieldOffset(0)] // size = 16
            public fixed byte _u128[16]; // uint8_t[16]

            public Span<byte> u128
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD9* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }

                set
                {
                    fixed (Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD9* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        value.CopyTo(span);
                    }
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 104, Pack = 8)]
        public struct Query
        {
            [FieldOffset(0)] // size = 4
            public uint limit;

            [FieldOffset(4)] // size = 4
            public uint offset;

            [FieldOffset(8)] // size = 88
            public COptionClause clause;

            [FieldOffset(96)] // size = 1
            public CBool dont_include_hashed_keys;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ResultAccount
        {
            [FieldOffset(0)] // size = 4
            public ResultAccount_Tag tag;

            [FieldOffset(8)] // size = 8
            public Account* _ok;

            public Account ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultAccount_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Account* _ok;

            public Account ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultAccount_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public Account* _ok;

            public Account ok
            {
                get
                {
                    return *_ok;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultAccount_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ResultCArrayEntity
        {
            [FieldOffset(0)] // size = 4
            public ResultCArrayEntity_Tag tag;

            [FieldOffset(8)] // size = 16
            public CArrayEntity _ok;

            public Span<Entity> ok
            {
                get
                {
                    fixed (ResultCArrayEntity* @this = &this)
                    {
                        var span = new Span<Entity>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArrayEntity();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (Entity* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ResultCArrayEntity_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 16
            public CArrayEntity _ok;

            public Span<Entity> ok
            {
                get
                {
                    fixed (ResultCArrayEntity_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var span = new Span<Entity>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArrayEntity();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (Entity* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ResultCArrayEntity_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 16
            public CArrayEntity _ok;

            public Span<Entity> ok
            {
                get
                {
                    fixed (ResultCArrayEntity_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0* @this = &this)
                    {
                        var span = new Span<Entity>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArrayEntity();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (Entity* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultCArrayEntity_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ResultCArrayFieldElement
        {
            [FieldOffset(0)] // size = 4
            public ResultCArrayFieldElement_Tag tag;

            [FieldOffset(8)] // size = 16
            public CArrayFieldElement _ok;

            public Span<FieldElement> ok
            {
                get
                {
                    fixed (ResultCArrayFieldElement* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArrayFieldElement();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ResultCArrayFieldElement_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 16
            public CArrayFieldElement _ok;

            public Span<FieldElement> ok
            {
                get
                {
                    fixed (ResultCArrayFieldElement_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArrayFieldElement();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ResultCArrayFieldElement_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 16
            public CArrayFieldElement _ok;

            public Span<FieldElement> ok
            {
                get
                {
                    fixed (ResultCArrayFieldElement_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0* @this = &this)
                    {
                        var span = new Span<FieldElement>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArrayFieldElement();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (FieldElement* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultCArrayFieldElement_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct ResultCArrayu8
        {
            [FieldOffset(0)] // size = 4
            public ResultCArrayu8_Tag tag;

            [FieldOffset(8)] // size = 16
            public CArrayu8 _ok;

            public Span<byte> ok
            {
                get
                {
                    fixed (ResultCArrayu8* @this = &this)
                    {
                        var span = new Span<byte>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArrayu8();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (byte* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ResultCArrayu8_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 16
            public CArrayu8 _ok;

            public Span<byte> ok
            {
                get
                {
                    fixed (ResultCArrayu8_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var span = new Span<byte>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArrayu8();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (byte* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ResultCArrayu8_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 16
            public CArrayu8 _ok;

            public Span<byte> ok
            {
                get
                {
                    fixed (ResultCArrayu8_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0* @this = &this)
                    {
                        var span = new Span<byte>(@this->_ok.data, (int)@this->_ok.data_len);
                        return span;
                    }
                }

                set
                {

                    _ok = new CArrayu8();
                    _ok.data_len = (UIntPtr)value.Length;
                    fixed (byte* ptr = value)
                    {
                        _ok.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultCArrayu8_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct ResultFieldElement
        {
            [FieldOffset(0)] // size = 4
            public ResultFieldElement_Tag tag;

            [FieldOffset(8)] // size = 32
            public FieldElement ok;

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct ResultFieldElement_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 32
            public FieldElement ok;

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct ResultFieldElement_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 32
            public FieldElement ok;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultFieldElement_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ResultProvider
        {
            [FieldOffset(0)] // size = 4
            public ResultProvider_Tag tag;

            [FieldOffset(8)] // size = 8
            public Provider* _ok;

            public Provider ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultProvider_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Provider* _ok;

            public Provider ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultProvider_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public Provider* _ok;

            public Provider ok
            {
                get
                {
                    return *_ok;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultProvider_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 72, Pack = 8)]
        public struct ResultSignature
        {
            [FieldOffset(0)] // size = 4
            public ResultSignature_Tag tag;

            [FieldOffset(8)] // size = 64
            public Signature ok;

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
        public struct ResultSignature_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 64
            public Signature ok;

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 1)]
        public struct ResultSignature_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 64
            public Signature ok;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultSignature_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ResultSubscription
        {
            [FieldOffset(0)] // size = 4
            public ResultSubscription_Tag tag;

            [FieldOffset(8)] // size = 8
            public Subscription* _ok;

            public Subscription ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultSubscription_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Subscription* _ok;

            public Subscription ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultSubscription_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public Subscription* _ok;

            public Subscription ok
            {
                get
                {
                    return *_ok;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultSubscription_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct ResultToriiClient
        {
            [FieldOffset(0)] // size = 4
            public ResultToriiClient_Tag tag;

            [FieldOffset(8)] // size = 8
            public ToriiClient* _ok;

            public ToriiClient ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultToriiClient_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public ToriiClient* _ok;

            public ToriiClient ok
            {
                get
                {
                    return *_ok;
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultToriiClient_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public ToriiClient* _ok;

            public ToriiClient ok
            {
                get
                {
                    return *_ok;
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct ResultToriiClient_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Resultbool
        {
            [FieldOffset(0)] // size = 4
            public Resultbool_Tag tag;

            [FieldOffset(8)] // size = 1
            public CBool ok;

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Resultbool_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 1
            public CBool ok;

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct Resultbool_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 1
            public CBool ok;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Resultbool_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Resultc_char
        {
            [FieldOffset(0)] // size = 4
            public Resultc_char_Tag tag;

            [FieldOffset(8)] // size = 8
            public CString ok_;

            public string ok
            {
                get
                {
                    return CString.ToString(ok_);
                }
                set
                {
                    ok_ = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Resultc_char_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public CString ok_;

            public string ok
            {
                get
                {
                    return CString.ToString(ok_);
                }
                set
                {
                    ok_ = CString.FromString(value);
                }
            }

            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Resultc_char_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public CString ok_;

            public string ok
            {
                get
                {
                    return CString.ToString(ok_);
                }
                set
                {
                    ok_ = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Resultc_char_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public Error err;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 1)]
        public struct Signature
        {
            [FieldOffset(0)] // size = 32
            public FieldElement r;

            [FieldOffset(32)] // size = 32
            public FieldElement s;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Struct
        {
            [FieldOffset(0)] // size = 8
            public CString name_;

            public string name
            {
                get
                {
                    return CString.ToString(name_);
                }
                set
                {
                    name_ = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 16
            public CArrayMember _children;

            public Span<Member> children
            {
                get
                {
                    fixed (Struct* @this = &this)
                    {
                        var span = new Span<Member>(@this->_children.data, (int)@this->_children.data_len);
                        return span;
                    }
                }

                set
                {

                    _children = new CArrayMember();
                    _children.data_len = (UIntPtr)value.Length;
                    fixed (Member* ptr = value)
                    {
                        _children.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
        public struct Ty
        {
            [FieldOffset(0)] // size = 4
            public Ty_Tag tag;

            [FieldOffset(8)]
            public Struct struct_;

            [FieldOffset(8)] // size = 40
            public Primitive primitive;

            [FieldOffset(8)] // size = 32
            public Enum enum_;

            [FieldOffset(8)] // size = 16
            public CArrayTy _tuple;

            public Span<Ty> tuple
            {
                get
                {
                    fixed (Ty* @this = &this)
                    {
                        var span = new Span<Ty>(@this->_tuple.data, (int)@this->_tuple.data_len);
                        return span;
                    }
                }

                set
                {

                    _tuple = new CArrayTy();
                    _tuple.data_len = (UIntPtr)value.Length;
                    fixed (Ty* ptr = value)
                    {
                        _tuple.data = ptr;
                    }
                }
            }

            [FieldOffset(8)] // size = 16
            public CArrayTy _array;

            public Span<Ty> array
            {
                get
                {
                    fixed (Ty* @this = &this)
                    {
                        var span = new Span<Ty>(@this->_array.data, (int)@this->_array.data_len);
                        return span;
                    }
                }

                set
                {

                    _array = new CArrayTy();
                    _array.data_len = (UIntPtr)value.Length;
                    fixed (Ty* ptr = value)
                    {
                        _array.data = ptr;
                    }
                }
            }

            [FieldOffset(8)] // size = 8
            public CString byte_array_;

            public string byte_array
            {
                get
                {
                    return CString.ToString(byte_array_);
                }
                set
                {
                    byte_array_ = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 40
            public Primitive primitive;

            [FieldOffset(0)] // size = 32
            public Enum enum_;

            [FieldOffset(0)] // size = 16
            public CArrayTy _tuple;

            public Span<Ty> tuple
            {
                get
                {
                    fixed (Ty_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var span = new Span<Ty>(@this->_tuple.data, (int)@this->_tuple.data_len);
                        return span;
                    }
                }

                set
                {

                    _tuple = new CArrayTy();
                    _tuple.data_len = (UIntPtr)value.Length;
                    fixed (Ty* ptr = value)
                    {
                        _tuple.data = ptr;
                    }
                }
            }

            [FieldOffset(0)] // size = 16
            public CArrayTy _array;

            public Span<Ty> array
            {
                get
                {
                    fixed (Ty_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var span = new Span<Ty>(@this->_array.data, (int)@this->_array.data_len);
                        return span;
                    }
                }

                set
                {

                    _array = new CArrayTy();
                    _array.data_len = (UIntPtr)value.Length;
                    fixed (Ty* ptr = value)
                    {
                        _array.data = ptr;
                    }
                }
            }

            [FieldOffset(0)] // size = 8
            public CString byte_array_;

            public string byte_array
            {
                get
                {
                    return CString.ToString(byte_array_);
                }
                set
                {
                    byte_array_ = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 40
            public Primitive primitive;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 32
            public Enum enum_;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 16
            public CArrayTy _tuple;

            public Span<Ty> tuple
            {
                get
                {
                    fixed (Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2* @this = &this)
                    {
                        var span = new Span<Ty>(@this->_tuple.data, (int)@this->_tuple.data_len);
                        return span;
                    }
                }

                set
                {

                    _tuple = new CArrayTy();
                    _tuple.data_len = (UIntPtr)value.Length;
                    fixed (Ty* ptr = value)
                    {
                        _tuple.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD3
        {
            [FieldOffset(0)] // size = 16
            public CArrayTy _array;

            public Span<Ty> array
            {
                get
                {
                    fixed (Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD3* @this = &this)
                    {
                        var span = new Span<Ty>(@this->_array.data, (int)@this->_array.data_len);
                        return span;
                    }
                }

                set
                {

                    _array = new CArrayTy();
                    _array.data_len = (UIntPtr)value.Length;
                    fixed (Ty* ptr = value)
                    {
                        _array.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4
        {
            [FieldOffset(0)] // size = 8
            public CString byte_array_;

            public string byte_array
            {
                get
                {
                    return CString.ToString(byte_array_);
                }
                set
                {
                    byte_array_ = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
        public struct WorldMetadata
        {
            [FieldOffset(0)] // size = 32
            public FieldElement world_address;

            [FieldOffset(32)] // size = 16
            public CArrayCHashItemFieldElementModelMetadata _models;

            public Span<CHashItemFieldElementModelMetadata> models
            {
                get
                {
                    fixed (WorldMetadata* @this = &this)
                    {
                        var span = new Span<CHashItemFieldElementModelMetadata>(@this->_models.data, (int)@this->_models.data_len);
                        return span;
                    }
                }

                set
                {

                    _models = new CArrayCHashItemFieldElementModelMetadata();
                    _models.data_len = (UIntPtr)value.Length;
                    fixed (CHashItemFieldElementModelMetadata* ptr = value)
                    {
                        _models.data = ptr;
                    }
                }
            }

        }

        [CNode(Kind = "Enum")]
        public enum BlockId_Tag : int
        {
            Hash = 0,
            Number = 1,
            BlockTag_ = 2
        }

        [CNode(Kind = "Enum")]
        public enum BlockTag : int
        {
            Latest = 0,
            Pending = 1
        }

        [CNode(Kind = "Enum")]
        public enum COptionClause_Tag : int
        {
            SomeClause = 0,
            NoneClause = 1
        }

        [CNode(Kind = "Enum")]
        public enum COptionFieldElement_Tag : int
        {
            SomeFieldElement = 0,
            NoneFieldElement = 1
        }

        [CNode(Kind = "Enum")]
        public enum Clause_Tag : int
        {
            Keys = 0,
            CMember = 1,
            Composite = 2
        }

        [CNode(Kind = "Enum")]
        public enum ComparisonOperator : int
        {
            Eq = 0,
            Neq = 1,
            Gt = 2,
            Gte = 3,
            Lt = 4,
            Lte = 5
        }

        [CNode(Kind = "Enum")]
        public enum EntityKeysClause_Tag : int
        {
            HashedKeys = 0,
            EntityKeys = 1
        }

        [CNode(Kind = "Enum")]
        public enum LogicalOperator : int
        {
            And = 0,
            Or = 1
        }

        [CNode(Kind = "Enum")]
        public enum MemberValue_Tag : int
        {
            String = 0,
            Primitive = 1
        }

        [CNode(Kind = "Enum")]
        public enum PatternMatching : int
        {
            FixedLen = 0,
            VariableLen = 1
        }

        [CNode(Kind = "Enum")]
        public enum Primitive_Tag : int
        {
            I8 = 0,
            I16 = 1,
            I32 = 2,
            I64 = 3,
            I128 = 4,
            U8 = 5,
            U16 = 6,
            U32 = 7,
            U64 = 8,
            U128 = 9,
            U256 = 10,
            USize = 11,
            Bool = 12,
            Felt252 = 13,
            ClassHash = 14,
            ContractAddress = 15
        }

        [CNode(Kind = "Enum")]
        public enum ResultAccount_Tag : int
        {
            OkAccount = 0,
            ErrAccount = 1
        }

        [CNode(Kind = "Enum")]
        public enum ResultCArrayEntity_Tag : int
        {
            OkCArrayEntity = 0,
            ErrCArrayEntity = 1
        }

        [CNode(Kind = "Enum")]
        public enum ResultCArrayFieldElement_Tag : int
        {
            OkCArrayFieldElement = 0,
            ErrCArrayFieldElement = 1
        }

        [CNode(Kind = "Enum")]
        public enum ResultCArrayu8_Tag : int
        {
            OkCArrayu8 = 0,
            ErrCArrayu8 = 1
        }

        [CNode(Kind = "Enum")]
        public enum ResultFieldElement_Tag : int
        {
            OkFieldElement = 0,
            ErrFieldElement = 1
        }

        [CNode(Kind = "Enum")]
        public enum ResultProvider_Tag : int
        {
            OkProvider = 0,
            ErrProvider = 1
        }

        [CNode(Kind = "Enum")]
        public enum ResultSignature_Tag : int
        {
            OkSignature = 0,
            ErrSignature = 1
        }

        [CNode(Kind = "Enum")]
        public enum ResultSubscription_Tag : int
        {
            OkSubscription = 0,
            ErrSubscription = 1
        }

        [CNode(Kind = "Enum")]
        public enum ResultToriiClient_Tag : int
        {
            OkToriiClient = 0,
            ErrToriiClient = 1
        }

        [CNode(Kind = "Enum")]
        public enum Resultbool_Tag : int
        {
            Okbool = 0,
            Errbool = 1
        }

        [CNode(Kind = "Enum")]
        public enum Resultc_char_Tag : int
        {
            Okc_char = 0,
            Errc_char = 1
        }

        [CNode(Kind = "Enum")]
        public enum Ty_Tag : int
        {
            Primitive_ = 0,
            Struct_ = 1,
            Enum_ = 2,
            Tuple_ = 3,
            Array_ = 4,
            ByteArray = 5
        }

        [CNode(Kind = "OpaqueType")]
        [StructLayout(LayoutKind.Sequential)]
        public struct Account
        {
        }

        [CNode(Kind = "OpaqueType")]
        [StructLayout(LayoutKind.Sequential)]
        public struct Provider
        {
        }

        [CNode(Kind = "OpaqueType")]
        [StructLayout(LayoutKind.Sequential)]
        public struct Subscription
        {
        }

        [CNode(Kind = "OpaqueType")]
        [StructLayout(LayoutKind.Sequential)]
        public struct ToriiClient
        {
        }

        #endregion
    }

}
