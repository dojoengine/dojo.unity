/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_toriiclient_free(a: number, b: number): void;
export function __wbg_provider_free(a: number, b: number): void;
export function __wbg_account_free(a: number, b: number): void;
export function __wbg_subscription_free(a: number, b: number): void;
export function typedDataEncode(a: number, b: number, c: number, d: number, e: number): void;
export function signingKeyNew(a: number): void;
export function signingKeySign(a: number, b: number, c: number, d: number, e: number): void;
export function verifyingKeyNew(a: number, b: number, c: number): void;
export function verifyingKeyVerify(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function createProvider(a: number, b: number, c: number): void;
export function provider_createAccount(a: number, b: number, c: number, d: number, e: number): number;
export function provider_call(a: number, b: number, c: number): number;
export function provider_waitForTransaction(a: number, b: number, c: number): number;
export function account_address(a: number, b: number): void;
export function account_chainId(a: number, b: number): void;
export function account_setBlockId(a: number, b: number, c: number, d: number): void;
export function account_executeRaw(a: number, b: number, c: number): number;
export function account_deployBurner(a: number, b: number, c: number): number;
export function account_nonce(a: number): number;
export function hashGetContractAddress(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): void;
export function getSelectorFromTag(a: number, b: number, c: number): void;
export function byteArraySerialize(a: number, b: number, c: number): void;
export function byteArrayDeserialize(a: number, b: number, c: number): void;
export function poseidonHash(a: number, b: number, c: number): void;
export function getSelectorFromName(a: number, b: number, c: number): void;
export function starknetKeccak(a: number, b: number): void;
export function cairoShortStringToFelt(a: number, b: number, c: number): void;
export function parseCairoShortString(a: number, b: number, c: number): void;
export function toriiclient_getEntities(a: number, b: number): number;
export function toriiclient_getAllEntities(a: number, b: number, c: number): number;
export function toriiclient_getEventMessages(a: number, b: number, c: number): number;
export function toriiclient_onEntityUpdated(a: number, b: number, c: number, d: number): number;
export function toriiclient_updateEntitySubscription(a: number, b: number, c: number, d: number): number;
export function toriiclient_onEventMessageUpdated(a: number, b: number, c: number, d: number, e: number): number;
export function toriiclient_updateEventMessageSubscription(a: number, b: number, c: number, d: number, e: number): number;
export function toriiclient_onStarknetEvent(a: number, b: number, c: number, d: number): number;
export function toriiclient_onIndexerUpdated(a: number, b: number, c: number, d: number): number;
export function toriiclient_publishMessage(a: number, b: number, c: number, d: number, e: number): number;
export function subscription_cancel(a: number): void;
export function createClient(a: number): number;
export function __wbg_intounderlyingbytesource_free(a: number, b: number): void;
export function intounderlyingbytesource_type(a: number, b: number): void;
export function intounderlyingbytesource_autoAllocateChunkSize(a: number): number;
export function intounderlyingbytesource_start(a: number, b: number): void;
export function intounderlyingbytesource_pull(a: number, b: number): number;
export function intounderlyingbytesource_cancel(a: number): void;
export function __wbg_intounderlyingsource_free(a: number, b: number): void;
export function intounderlyingsource_pull(a: number, b: number): number;
export function intounderlyingsource_cancel(a: number): void;
export function __wbg_intounderlyingsink_free(a: number, b: number): void;
export function intounderlyingsink_write(a: number, b: number): number;
export function intounderlyingsink_close(a: number): number;
export function intounderlyingsink_abort(a: number, b: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hd2c74c1b7e9222d1(a: number, b: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h4aebea369d10720f(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h4301a475fe6d23e9(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hdff8534b51b570f5(a: number, b: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hbb184a197cc25f28(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h57be5134d1d69be9(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__hcb093c54d64f88f2(a: number, b: number, c: number, d: number): void;
